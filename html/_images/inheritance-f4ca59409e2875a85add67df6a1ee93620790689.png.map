<map id="inheritance8ce0b79a11" name="inheritance8ce0b79a11">
<area shape="rect" id="node1" href="TimeIntegratorUnit.html#TimeIntegratorUnit.BackwardEuler" target="_top" title="Basic implementation of the Backwards/Implicit Euler method:" alt="" coords="100,108,181,126"/>
<area shape="rect" id="node2" href="TimeIntegratorUnit.html#TimeIntegratorUnit.DependentSystemTimeIntegratorUnit" target="_top" title="This is the base template class for integration methods that heavily depend on multiple equations of the ODE. Instances of these class have a variable called terms, which stores all equations" alt="" coords="75,56,261,74"/>
<area shape="rect" id="node3" href="TimeIntegratorUnit.html#TimeIntegratorUnit.BackwardRungeKutta" target="_top" title="This class only represents implicit Runge Kutta methods. For explicit methods use the RungeKutta class." alt="" coords="198,108,308,126"/>
<area shape="rect" id="node4" href="TimeIntegratorUnit.html#TimeIntegratorUnit.BackwardRungeKutta1" target="_top" title="The one stage Implicit Runge&#45;Kutta method of order one is identical to the Backwards Euler Method" alt="" coords="4,160,119,178"/>
<area shape="rect" id="node5" href="TimeIntegratorUnit.html#TimeIntegratorUnit.DIRK2" target="_top" title="This Method is a Diagonally Implicit Runge Kutta method (2nd order, 2 stages) with the following Butcher Tableau::" alt="" coords="136,160,187,178"/>
<area shape="rect" id="node6" href="TimeIntegratorUnit.html#TimeIntegratorUnit.DIRK3" target="_top" title="This Method is a Diagonally Implicit Runge Kutta method (3nd order, 4 stages) with the following Butcher Tableau::" alt="" coords="204,160,255,178"/>
<area shape="rect" id="node7" href="TimeIntegratorUnit.html#TimeIntegratorUnit.DIRK4" target="_top" title="This uses a Diagonally Implicit Runge Kutta method (4th order, 3 stages) with the following Butcher Tableau::" alt="" coords="272,160,323,178"/>
<area shape="rect" id="node10" href="TimeIntegratorUnit.html#TimeIntegratorUnit.GL4" target="_top" title="This uses the Gaussâ€“Legendre method of order four with two stages and the following Butcher Tableau::" alt="" coords="340,160,391,178"/>
<area shape="rect" id="node13" href="TimeIntegratorUnit.html#TimeIntegratorUnit.ImplicitMidpoint" target="_top" title="The Implicit Midpoint Method can be seen as a second order two stageRunge Kutta method with the following Butcher Tableau::" alt="" coords="409,160,495,178"/>
<area shape="rect" id="node8" href="TimeIntegratorUnit.html#TimeIntegratorUnit.TimeIntegratorUnit" target="_top" title="This abstract class is a template for time integration Methods. This class itself cannot be instantiated. It ensures, that every Method contains a term, the timestep length and for convinience" alt="" coords="334,4,435,22"/>
<area shape="rect" id="node9" href="TimeIntegratorUnit.html#TimeIntegratorUnit.ExplicitEuler" target="_top" title="ExplicitEuler" alt="" coords="279,56,349,74"/>
<area shape="rect" id="node12" href="TimeIntegratorUnit.html#TimeIntegratorUnit.MultiDependencyTimeIntegratorUnit" target="_top" title="This is the base template class for integration methods that heavily depend on multiple equations of the ODE. Instances of these class have a variable called terms, which stores all equations" alt="" coords="366,56,545,74"/>
<area shape="rect" id="node15" href="TimeIntegratorUnit.html#TimeIntegratorUnit.OperatorSplitting" target="_top" title="This is the base class for most splitting techniques. Other than TimeIntegratorUnits, splitting techniques consist of two terms, that are already annotated with a" alt="" coords="572,56,665,74"/>
<area shape="rect" id="node11" href="TimeIntegratorUnit.html#TimeIntegratorUnit.Heun" target="_top" title="Heun&#39;s Method is a two&#45;stage second order Runge Kutta method, which is often referred to as the improved Euler&#39;s method." alt="" coords="350,108,401,126"/>
<area shape="rect" id="node14" href="TimeIntegratorUnit.html#TimeIntegratorUnit.Midpoint" target="_top" title="The midpoint method is a second&#45;order one&#45;step method from the class of RungeKutta methods." alt="" coords="418,108,472,126"/>
<area shape="rect" id="node17" href="TimeIntegratorUnit.html#TimeIntegratorUnit.RungeKutta" target="_top" title="Runge Kutta is a class of integration methods, whose members are all of form:" alt="" coords="489,108,556,126"/>
<area shape="rect" id="node16" href="TimeIntegratorUnit.html#TimeIntegratorUnit.OrdinarySplitting" target="_top" title="Ordinary splitting integrates the two operators each for one timestep length deltaT, while the result of the" alt="" coords="573,108,664,126"/>
<area shape="rect" id="node21" href="TimeIntegratorUnit.html#TimeIntegratorUnit.StrangSplitting" target="_top" title="Strang splitting is used to divide an equation consisting of an addition of two terms, which are mostly not stable to the same integration method. Thus both terms are treated seperately." alt="" coords="681,108,764,126"/>
<area shape="rect" id="node18" href="TimeIntegratorUnit.html#TimeIntegratorUnit.RungeKutta1" target="_top" title="This class implements the famous RK4 algorithm. The corresponding Butcher&#45;Tableau is as follows::" alt="" coords="512,160,584,178"/>
<area shape="rect" id="node19" href="TimeIntegratorUnit.html#TimeIntegratorUnit.RungeKutta2" target="_top" title="This class implements the famous RK4 algorithm. The corresponding Butcher&#45;Tableau is as follows::" alt="" coords="601,160,674,178"/>
<area shape="rect" id="node20" href="TimeIntegratorUnit.html#TimeIntegratorUnit.RungeKutta4" target="_top" title="This class implements the famous RK4 algorithm. The corresponding Butcher&#45;Tableau is as follows ::" alt="" coords="691,160,764,178"/>
</map>
